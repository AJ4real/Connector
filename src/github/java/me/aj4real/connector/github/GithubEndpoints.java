package me.aj4real.connector.github;

import me.aj4real.connector.Endpoint;

public class GithubEndpoints {
    public static final String BASE = "https://api.github.com";
    public static final Endpoint AUTHENTICATED_USER = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user");
    public static final Endpoint AUTHENTICATED_USER_FOLLOW = new Endpoint(Endpoint.HttpMethod.PUT, BASE + "/user/following/{user}", "user");
    public static final Endpoint AUTHENTICATED_USER_UNFOLLOW = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/user/following/{user}", "user");
    public static final Endpoint AUTHENTICATED_USER_ORGANIZATIONS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/orgs");
    public static final Endpoint SUBSCRIBED_REPOSITORIES = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/{user}/subscriptions", "user");
    public static final Endpoint STARRED_REPOSITORIES = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/{user}/starred", "user");
    public static final Endpoint FOLLOWERS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/{user}/followers/{other_user}", new String[] { "user" }, new String[] { "other_user" });
    public static final Endpoint FOLLOWING = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/{user}/following/{other_user}", new String[] { "user" }, new String[] { "other_user" });
    public static final Endpoint REPOSITORY_ISSUE = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues/{issue_number}", new String[] { "owner", "repo" }, new String[] { "issue_number" });
    public static final Endpoint REPOSITORY_COMMITS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/commits/{hash}", new String[] { "owner", "repo" }, new String[] { "hash" });
    public static final Endpoint MODIFY_REPOSITORY_ISSUE = new Endpoint(Endpoint.HttpMethod.PATCH, BASE + "/repos/{owner}/{repo}/issues/{issue_number}", new String[] { "owner", "repo", "issue_number" });
    public static final Endpoint LIST_ISSUE_COMMENTS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues/{issue_number}", new String[] { "owner", "repo", "issue_number" });
    public static final Endpoint LIST_ISSUE_LABELS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues/{issue_number}", new String[] { "owner", "repo", "issue_number" });
    public static final Endpoint ADD_USER_EMAIL = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/user/emails");
    public static final Endpoint REMOVE_USER_EMAIL = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/user/emails");
    public static final Endpoint LIST_USER_EMAILS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/emails");
    public static final Endpoint LIST_USER_PUBLIC_EMAILS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/user/emails");
    public static final Endpoint USERS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/users/{user}", "user");
    public static final Endpoint UNBLOCK_USER = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/users/blocks/{user}", "user");
    public static final Endpoint BLOCK_USER = new Endpoint(Endpoint.HttpMethod.PUT, BASE + "/user/blocks/{user}", "user");
    public static final Endpoint BLOCKED_USERS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/users/blocks/{user}", "user");
    public static final Endpoint LIST_BLOCKED_USERS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/users/blocks");
    public static final Endpoint REPOSITORY = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}", new String[] { "owner" }, new String[] { "repo" });
    public static final Endpoint MODIFY_REPOSITORY = new Endpoint(Endpoint.HttpMethod.PATCH, BASE + "/repos/{owner}/{repo}", new String[] { "owner", "repo" });
    public static final Endpoint CREATE_REPOSITORY = new Endpoint(Endpoint.HttpMethod.PATCH, BASE + "/repos/{owner}", new String[] { "owner" });
    public static final Endpoint DELETE_REPOSITORY = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/repos/{owner}/{repo}", new String[] { "owner", "repo" });
    public static final Endpoint ENABLE_AUTOMATED_SECURITY_FIXES = new Endpoint(Endpoint.HttpMethod.PUT, BASE + "/repos/{owner}/{repo}/automated-security-fixes", new String[] { "owner", "repo" });
    public static final Endpoint DISABLE_AUTOMATED_SECURITY_FIXES = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/repos/{owner}/{repo}/automated-security-fixes", new String[] { "owner", "repo" });
    public static final Endpoint ORGANIZATIONS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/orgs/{org}", "org");
    public static final Endpoint CREATE_REPOSITORY_ISSUE = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues", new String[] { "owner", "repo" });
    public static final Endpoint LIST_REPOSITORY_CONTRIBUTORS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/contributors", new String[] { "owner", "repo" });
    public static final Endpoint LIST_REPOSITORY_COMMITS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/commits", new String[] { "owner", "repo" });
    public static final Endpoint LIST_REPOSITORY_ISSUE_COMMENTS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues/comments/{number}", new String[] { "owner", "repo" }, new String[] { "number" });
    public static final Endpoint LIST_REPOSITORY_ISSUES = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/issues/{number}", new String[] { "owner", "repo" }, new String[] { "number" });
    public static final Endpoint LIST_REPOSITORY_TOPICS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/topics", new String[] { "owner", "repo" });
    public static final Endpoint LIST_REPOSITORY_LANGUAGES = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/languages", new String[] { "owner", "repo" });
    public static final Endpoint ENABLE_REPOSITORY_VULNERABILITY_ALERTS = new Endpoint(Endpoint.HttpMethod.PUT, BASE + "/repos/{owner}/{repo}/vulnerability-alerts", new String[] { "owner", "repo" });
    public static final Endpoint DISABLE_REPOSITORY_VULNERABILITY_ALERTS = new Endpoint(Endpoint.HttpMethod.DELETE, BASE + "/repos/{owner}/{repo}/vulnerability-alerts", new String[] { "owner", "repo" });
    public static final Endpoint REPOSITORY_VULNERABILITY_ALERTS = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/vulnerability-alerts", new String[] { "owner", "repo" });
    public static final Endpoint TRANSFER_REPOSITORY = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/repos/{owner}/{repo}/transfer", new String[] { "owner", "repo" });
    public static final Endpoint LIST_REPOSITORY_BRANCHES = new Endpoint(Endpoint.HttpMethod.GET, BASE + "/repos/{owner}/{repo}/branches/{branch}", new String[] { "owner", "repo" }, new String[] { "branch" });
    public static final Endpoint CREATE_ORGANIZATION_REPOSITORY = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/orgs/{org}", "org");
    public static final Endpoint ORGANIZATION_MEMBERS = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/orgs/{org}/members", "org");
    public static final Endpoint ORGANIZATION_PUBLIC_MEMBERS = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/orgs/{org}/public_members", "org");
    public static final Endpoint ORGANIZATION_HOOKS = new Endpoint(Endpoint.HttpMethod.POST, BASE + "/orgs/{org}/hooks", "org");
}